import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import federation from "@originjs/vite-plugin-federation"
import path from 'path';

export default defineConfig({
  plugins: [
  {
  name: 'custom-html-plugin',
  transformIndexHtml(html) {
    // Ensure Vite's main script tag is injected into the body
    return html.replace(
      '</body>',
      '<script type="module" src="/src/index.jsx"></script></body>'
    );
  },
},
    react(),
    federation({
      name: 'hostApp',
      remotes: {
        <%- microfrontends.reduce((acc, mf) => {
          return `${acc}${mf.name}: 'http://localhost:${mf.port}/dist/assets/remoteEntry.js',\n`;
        }, '') %>
      },
      shared: {
        react: { singleton: true, eager: true },
        'react-dom': { singleton: true, eager: true },
      },
    }),
  ],
  resolve: {
    alias: {
      // Optionally add aliases if needed
      '@': path.resolve(__dirname, 'src'),
    },
  },
  root: './', // Ensure this is correct
  build: {
    target: 'esnext', // Ensure modern JavaScript for production builds
    // outDir: 'dist',
    rollupOptions: {
      input: '/src/index.jsx',
      output: {
        // Configure file names to include hash for cache busting
        entryFileNames: '[name].[hash].js',
        chunkFileNames: '[name].[hash].js',
        assetFileNames: '[name].[hash].[ext]',
      },
    },
  },
});
