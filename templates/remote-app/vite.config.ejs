import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import federation from "@originjs/vite-plugin-federation"
import path from 'path';

export default defineConfig({
  plugins: [
  {
    name: 'custom-html-plugin',
    transformIndexHtml(html) {
      // Ensure Vite's main script tag is injected into the body
      return html.replace(
        '</body>',
        '<script type="module" src="/src/index.jsx"></script></body>'
      );
    },
  },
    react(),
    federation({
      name: '<%= microfrontends.name %>',
      filename: 'remoteEntry.js',
      exposes: {
        './Button': './src/components/Button', // Exposing Button component
      },
      shared: {
        react: { singleton: true, eager: true },
        'react-dom': { singleton: true, eager: true },
      },
    }),
  ],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, 'src'), // Simplified import paths
    },
  },
  server: {
    port: '<%= microfrontends.port %>', // Use dynamic port or environment variable
    open: true, // Automatically open the browser
    cors: true, // Handle cross-origin requests
    hmr: true, // Enable hot module replacement
    watch: {
      usePolling: true, // Useful if you have file system issues on certain environments
    },
  },
  root: './', // Ensure this is correct
  build: {
    target: 'esnext', // Ensure modern JavaScript for production builds
    rollupOptions: {
      input: '/index.jsx',
      output: {
        // Configure file names to include hash for cache busting
        entryFileNames: '[name].[hash].js',
        chunkFileNames: '[name].[hash].js',
        assetFileNames: '[name].[hash].[ext]',
      },
    },
  },
});
